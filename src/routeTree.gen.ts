/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GenresImport } from './routes/genres'
import { Route as ArtistsImport } from './routes/artists'
import { Route as DashboardRouteImport } from './routes/_dashboard/route'
import { Route as authRouteImport } from './routes/(auth)/route'
import { Route as IndexImport } from './routes/index'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard/route'
import { Route as DashboardDashboardSongsRouteImport } from './routes/_dashboard/dashboard/songs/route'
import { Route as DashboardDashboardGenresRouteImport } from './routes/_dashboard/dashboard/genres/route'
import { Route as DashboardDashboardArtistsRouteImport } from './routes/_dashboard/dashboard/artists/route'
import { Route as DashboardDashboardSongsCreateImport } from './routes/_dashboard/dashboard/songs/create'
import { Route as DashboardDashboardGenresCreateImport } from './routes/_dashboard/dashboard/genres/create'
import { Route as DashboardDashboardSongsIdEditImport } from './routes/_dashboard/dashboard/songs/$id.edit'
import { Route as DashboardDashboardGenresIdEditImport } from './routes/_dashboard/dashboard/genres/$id.edit'

// Create/Update Routes

const GenresRoute = GenresImport.update({
  id: '/genres',
  path: '/genres',
  getParentRoute: () => rootRoute,
} as any)

const ArtistsRoute = ArtistsImport.update({
  id: '/artists',
  path: '/artists',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const authRouteRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => authRouteRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => authRouteRoute,
} as any)

const DashboardDashboardRouteRoute = DashboardDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardDashboardSongsRouteRoute =
  DashboardDashboardSongsRouteImport.update({
    id: '/songs',
    path: '/songs',
    getParentRoute: () => DashboardDashboardRouteRoute,
  } as any)

const DashboardDashboardGenresRouteRoute =
  DashboardDashboardGenresRouteImport.update({
    id: '/genres',
    path: '/genres',
    getParentRoute: () => DashboardDashboardRouteRoute,
  } as any)

const DashboardDashboardArtistsRouteRoute =
  DashboardDashboardArtistsRouteImport.update({
    id: '/artists',
    path: '/artists',
    getParentRoute: () => DashboardDashboardRouteRoute,
  } as any)

const DashboardDashboardSongsCreateRoute =
  DashboardDashboardSongsCreateImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => DashboardDashboardSongsRouteRoute,
  } as any)

const DashboardDashboardGenresCreateRoute =
  DashboardDashboardGenresCreateImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => DashboardDashboardGenresRouteRoute,
  } as any)

const DashboardDashboardSongsIdEditRoute =
  DashboardDashboardSongsIdEditImport.update({
    id: '/$id/edit',
    path: '/$id/edit',
    getParentRoute: () => DashboardDashboardSongsRouteRoute,
  } as any)

const DashboardDashboardGenresIdEditRoute =
  DashboardDashboardGenresIdEditImport.update({
    id: '/$id/edit',
    path: '/$id/edit',
    getParentRoute: () => DashboardDashboardGenresRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/artists': {
      id: '/artists'
      path: '/artists'
      fullPath: '/artists'
      preLoaderRoute: typeof ArtistsImport
      parentRoute: typeof rootRoute
    }
    '/genres': {
      id: '/genres'
      path: '/genres'
      fullPath: '/genres'
      preLoaderRoute: typeof GenresImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof authRouteImport
    }
    '/_dashboard/dashboard/artists': {
      id: '/_dashboard/dashboard/artists'
      path: '/artists'
      fullPath: '/dashboard/artists'
      preLoaderRoute: typeof DashboardDashboardArtistsRouteImport
      parentRoute: typeof DashboardDashboardRouteImport
    }
    '/_dashboard/dashboard/genres': {
      id: '/_dashboard/dashboard/genres'
      path: '/genres'
      fullPath: '/dashboard/genres'
      preLoaderRoute: typeof DashboardDashboardGenresRouteImport
      parentRoute: typeof DashboardDashboardRouteImport
    }
    '/_dashboard/dashboard/songs': {
      id: '/_dashboard/dashboard/songs'
      path: '/songs'
      fullPath: '/dashboard/songs'
      preLoaderRoute: typeof DashboardDashboardSongsRouteImport
      parentRoute: typeof DashboardDashboardRouteImport
    }
    '/_dashboard/dashboard/genres/create': {
      id: '/_dashboard/dashboard/genres/create'
      path: '/create'
      fullPath: '/dashboard/genres/create'
      preLoaderRoute: typeof DashboardDashboardGenresCreateImport
      parentRoute: typeof DashboardDashboardGenresRouteImport
    }
    '/_dashboard/dashboard/songs/create': {
      id: '/_dashboard/dashboard/songs/create'
      path: '/create'
      fullPath: '/dashboard/songs/create'
      preLoaderRoute: typeof DashboardDashboardSongsCreateImport
      parentRoute: typeof DashboardDashboardSongsRouteImport
    }
    '/_dashboard/dashboard/genres/$id/edit': {
      id: '/_dashboard/dashboard/genres/$id/edit'
      path: '/$id/edit'
      fullPath: '/dashboard/genres/$id/edit'
      preLoaderRoute: typeof DashboardDashboardGenresIdEditImport
      parentRoute: typeof DashboardDashboardGenresRouteImport
    }
    '/_dashboard/dashboard/songs/$id/edit': {
      id: '/_dashboard/dashboard/songs/$id/edit'
      path: '/$id/edit'
      fullPath: '/dashboard/songs/$id/edit'
      preLoaderRoute: typeof DashboardDashboardSongsIdEditImport
      parentRoute: typeof DashboardDashboardSongsRouteImport
    }
  }
}

// Create and export the route tree

interface authRouteRouteChildren {
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface DashboardDashboardGenresRouteRouteChildren {
  DashboardDashboardGenresCreateRoute: typeof DashboardDashboardGenresCreateRoute
  DashboardDashboardGenresIdEditRoute: typeof DashboardDashboardGenresIdEditRoute
}

const DashboardDashboardGenresRouteRouteChildren: DashboardDashboardGenresRouteRouteChildren =
  {
    DashboardDashboardGenresCreateRoute: DashboardDashboardGenresCreateRoute,
    DashboardDashboardGenresIdEditRoute: DashboardDashboardGenresIdEditRoute,
  }

const DashboardDashboardGenresRouteRouteWithChildren =
  DashboardDashboardGenresRouteRoute._addFileChildren(
    DashboardDashboardGenresRouteRouteChildren,
  )

interface DashboardDashboardSongsRouteRouteChildren {
  DashboardDashboardSongsCreateRoute: typeof DashboardDashboardSongsCreateRoute
  DashboardDashboardSongsIdEditRoute: typeof DashboardDashboardSongsIdEditRoute
}

const DashboardDashboardSongsRouteRouteChildren: DashboardDashboardSongsRouteRouteChildren =
  {
    DashboardDashboardSongsCreateRoute: DashboardDashboardSongsCreateRoute,
    DashboardDashboardSongsIdEditRoute: DashboardDashboardSongsIdEditRoute,
  }

const DashboardDashboardSongsRouteRouteWithChildren =
  DashboardDashboardSongsRouteRoute._addFileChildren(
    DashboardDashboardSongsRouteRouteChildren,
  )

interface DashboardDashboardRouteRouteChildren {
  DashboardDashboardArtistsRouteRoute: typeof DashboardDashboardArtistsRouteRoute
  DashboardDashboardGenresRouteRoute: typeof DashboardDashboardGenresRouteRouteWithChildren
  DashboardDashboardSongsRouteRoute: typeof DashboardDashboardSongsRouteRouteWithChildren
}

const DashboardDashboardRouteRouteChildren: DashboardDashboardRouteRouteChildren =
  {
    DashboardDashboardArtistsRouteRoute: DashboardDashboardArtistsRouteRoute,
    DashboardDashboardGenresRouteRoute:
      DashboardDashboardGenresRouteRouteWithChildren,
    DashboardDashboardSongsRouteRoute:
      DashboardDashboardSongsRouteRouteWithChildren,
  }

const DashboardDashboardRouteRouteWithChildren =
  DashboardDashboardRouteRoute._addFileChildren(
    DashboardDashboardRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardDashboardRouteRoute: typeof DashboardDashboardRouteRouteWithChildren
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardDashboardRouteRoute: DashboardDashboardRouteRouteWithChildren,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof authRouteRouteWithChildren
  '': typeof DashboardRouteRouteWithChildren
  '/artists': typeof ArtistsRoute
  '/genres': typeof GenresRoute
  '/dashboard': typeof DashboardDashboardRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/dashboard/artists': typeof DashboardDashboardArtistsRouteRoute
  '/dashboard/genres': typeof DashboardDashboardGenresRouteRouteWithChildren
  '/dashboard/songs': typeof DashboardDashboardSongsRouteRouteWithChildren
  '/dashboard/genres/create': typeof DashboardDashboardGenresCreateRoute
  '/dashboard/songs/create': typeof DashboardDashboardSongsCreateRoute
  '/dashboard/genres/$id/edit': typeof DashboardDashboardGenresIdEditRoute
  '/dashboard/songs/$id/edit': typeof DashboardDashboardSongsIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof authRouteRouteWithChildren
  '': typeof DashboardRouteRouteWithChildren
  '/artists': typeof ArtistsRoute
  '/genres': typeof GenresRoute
  '/dashboard': typeof DashboardDashboardRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/dashboard/artists': typeof DashboardDashboardArtistsRouteRoute
  '/dashboard/genres': typeof DashboardDashboardGenresRouteRouteWithChildren
  '/dashboard/songs': typeof DashboardDashboardSongsRouteRouteWithChildren
  '/dashboard/genres/create': typeof DashboardDashboardGenresCreateRoute
  '/dashboard/songs/create': typeof DashboardDashboardSongsCreateRoute
  '/dashboard/genres/$id/edit': typeof DashboardDashboardGenresIdEditRoute
  '/dashboard/songs/$id/edit': typeof DashboardDashboardSongsIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/_dashboard': typeof DashboardRouteRouteWithChildren
  '/artists': typeof ArtistsRoute
  '/genres': typeof GenresRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/_dashboard/dashboard/artists': typeof DashboardDashboardArtistsRouteRoute
  '/_dashboard/dashboard/genres': typeof DashboardDashboardGenresRouteRouteWithChildren
  '/_dashboard/dashboard/songs': typeof DashboardDashboardSongsRouteRouteWithChildren
  '/_dashboard/dashboard/genres/create': typeof DashboardDashboardGenresCreateRoute
  '/_dashboard/dashboard/songs/create': typeof DashboardDashboardSongsCreateRoute
  '/_dashboard/dashboard/genres/$id/edit': typeof DashboardDashboardGenresIdEditRoute
  '/_dashboard/dashboard/songs/$id/edit': typeof DashboardDashboardSongsIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/artists'
    | '/genres'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/dashboard/artists'
    | '/dashboard/genres'
    | '/dashboard/songs'
    | '/dashboard/genres/create'
    | '/dashboard/songs/create'
    | '/dashboard/genres/$id/edit'
    | '/dashboard/songs/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/artists'
    | '/genres'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/dashboard/artists'
    | '/dashboard/genres'
    | '/dashboard/songs'
    | '/dashboard/genres/create'
    | '/dashboard/songs/create'
    | '/dashboard/genres/$id/edit'
    | '/dashboard/songs/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/_dashboard'
    | '/artists'
    | '/genres'
    | '/_dashboard/dashboard'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/_dashboard/dashboard/artists'
    | '/_dashboard/dashboard/genres'
    | '/_dashboard/dashboard/songs'
    | '/_dashboard/dashboard/genres/create'
    | '/_dashboard/dashboard/songs/create'
    | '/_dashboard/dashboard/genres/$id/edit'
    | '/_dashboard/dashboard/songs/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  ArtistsRoute: typeof ArtistsRoute
  GenresRoute: typeof GenresRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  ArtistsRoute: ArtistsRoute,
  GenresRoute: GenresRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)",
        "/_dashboard",
        "/artists",
        "/genres"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(auth)": {
      "filePath": "(auth)/route.tsx",
      "children": [
        "/(auth)/forgot-password",
        "/(auth)/login",
        "/(auth)/register"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard/route.tsx",
      "children": [
        "/_dashboard/dashboard"
      ]
    },
    "/artists": {
      "filePath": "artists.tsx"
    },
    "/genres": {
      "filePath": "genres.tsx"
    },
    "/_dashboard/dashboard": {
      "filePath": "_dashboard/dashboard/route.tsx",
      "parent": "/_dashboard",
      "children": [
        "/_dashboard/dashboard/artists",
        "/_dashboard/dashboard/genres",
        "/_dashboard/dashboard/songs"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx",
      "parent": "/(auth)"
    },
    "/_dashboard/dashboard/artists": {
      "filePath": "_dashboard/dashboard/artists/route.tsx",
      "parent": "/_dashboard/dashboard"
    },
    "/_dashboard/dashboard/genres": {
      "filePath": "_dashboard/dashboard/genres/route.tsx",
      "parent": "/_dashboard/dashboard",
      "children": [
        "/_dashboard/dashboard/genres/create",
        "/_dashboard/dashboard/genres/$id/edit"
      ]
    },
    "/_dashboard/dashboard/songs": {
      "filePath": "_dashboard/dashboard/songs/route.tsx",
      "parent": "/_dashboard/dashboard",
      "children": [
        "/_dashboard/dashboard/songs/create",
        "/_dashboard/dashboard/songs/$id/edit"
      ]
    },
    "/_dashboard/dashboard/genres/create": {
      "filePath": "_dashboard/dashboard/genres/create.tsx",
      "parent": "/_dashboard/dashboard/genres"
    },
    "/_dashboard/dashboard/songs/create": {
      "filePath": "_dashboard/dashboard/songs/create.tsx",
      "parent": "/_dashboard/dashboard/songs"
    },
    "/_dashboard/dashboard/genres/$id/edit": {
      "filePath": "_dashboard/dashboard/genres/$id.edit.tsx",
      "parent": "/_dashboard/dashboard/genres"
    },
    "/_dashboard/dashboard/songs/$id/edit": {
      "filePath": "_dashboard/dashboard/songs/$id.edit.tsx",
      "parent": "/_dashboard/dashboard/songs"
    }
  }
}
ROUTE_MANIFEST_END */
